# This playbook is meant to be run on servers to configure them to run the Django application locally.
# It installs the necessary services such as nginx, Python, MongoDB and copies all the files to the 
# remote server. Afterwards it sets up nginx with the necessary files and sets a Linux service which
# starts the Django application.

- hosts: servers
  become: yes
  
  tasks:
  - name: install nginx, wget and python+pip
    apt:
      name: 
        - nginx 
        - wget 
        - python3 
        - python3-pip
      update_cache: true
      state: present
    notify:
    - start nginx

  - name: check if mongodb is installed
    shell: mongod --version
    register: mongo_install
    ignore_errors: true

  - name: install mongodb
    shell: |
      wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -
      sudo apt-get install gnupg
      echo "deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.4 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.list
      sudo apt-get update
      sudo apt-get install -y mongodb-org
    notify:
    - start mongodb
    when: mongo_install.stdout.find('version') == -1

  - name: copy project folder 
    copy: 
      src: /app/mangalist
      dest: /app/
      mode: 0644
      owner: root
      group: root

  - name: delete default nginx file
    file:
      path: /etc/nginx/sites-available/default
      state: absent
    tags:
    - test

  - name: copy necessary nginx files
    copy: 
      src: /etc/nginx/sites-available/mysite.conf
      dest: /etc/nginx/sites-available/mysite.conf
      mode: 0644
      owner: root
      group: root
    notify:
    - restart nginx

  - name: create symlink between available and enabled
    file:
      src: /etc/nginx/sites-available/mysite.conf
      dest: /etc/nginx/sites-enabled/mysite.conf
      state: link

  - name: copy systemd file
    copy:
      src: /etc/systemd/system/uwsgi.service
      dest: /etc/systemd/system/uwsgi.service
      mode: 0644
      owner: root
      group: root

  - name: install uwsgi and django
    become: yes
    shell: |
      pip3 install uwsgi
      pip3 install django
      pip3 install djongo
      pip3 install sqlparse==0.2.4
      cp /etc/nginx/uwsgi_params /app/mangalist/mysite

  - name: collect django static files and start server
    shell: |
      cd /app/mangalist/mysite
      python3 manage.py collectstatic --noinput 
      python3 manage.py migrate
      sudo systemctl daemon-reload
      sudo systemctl start uwsgi.service
    notify:
    - restart nginx

  handlers:
  - name: start nginx
    service:
      name: nginx
      state: started
      enabled: yes

  - name: start mongodb
    service:
      name: mongod
      state: started
      enabled: yes

  - name: restart nginx
    service:
      name: nginx
      state: restarted